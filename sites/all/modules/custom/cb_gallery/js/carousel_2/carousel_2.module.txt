<?php
ini_set('display_errors', 1);
error_reporting(E_ALL);

function carousel_2_theme($existing, $type, $theme, $path){
	return array(
    'carousel_2_block' => array(
      'arguments'   => array('node' => new stdClass()), 
      'template'    => 'carousel_2_block',
      'file'        => 'theme.inc',
      'path'        => drupal_get_path('module', 'carousel_2') . '/theme'
      ),
      );
}

 function carousel_2_menu(){
    // path with autocomplete function for cities
    $items['carousel_2/autocomplete'] = array(
      'title' => 'Autocomplete for cities',
      'page callback' => '_carousel_2_autocomplete',
      'access arguments' => array('access content'), 
      'type' => MENU_CALLBACK
    );
    return $items;
 }    
function carousel_2_block($op = 'list', $delta = 0, $edit = array()){
	if($op == 'list' && $carousels = carousel_2_block_list()){
		foreach ($carousels as $key => $carouselnode) {
			$block[$key]['info'] = t('Carousel 2:'.$carouselnode->title);
			$deltas[$key] = $carouselnode->nid;
		}
		variable_set('carousel_2', $deltas, array());
	} else if ($op == 'view' && $deltas = variable_get('carousel_2', array())) {
		foreach($deltas as $key => $nid) {
			if ($key == $delta) {
				$carousel = node_load($nid);
				if ($carousel->status == 1) {
					$carousel = carousel_2_load_data($carousel);
					$carousel_2_path = drupal_get_path('module', 'carousel_2');
					drupal_add_js($carousel_2_path . "/js/jquery.tinycarousel.min.js.php?start=1&display=".$carousel->display."&height=".$carousel->height."&width=".$carousel->width."&axis='x'&controls=".$carousel->controls."&pager=".$carousel->pager."&interval=false&intervaltime=".$carousel->interval_time."&rewind=false&animation=true&duration=".$carousel->duration."&callback=null&overlay=".$carousel->overlay."&overlay_toggle=".$carousel->overlay_toggle."&overlay_height=".$carousel->overlay_height."&overlay_y=".$carousel->overlay_y."&cache=a", $type = 'module', $scope = 'footer');
					drupal_set_html_head('<link type="text/css" rel="stylesheet" media="all" href="/'.$carousel_2_path . '/css/carousel.css.php?height='.$carousel->height.'&width='.$carousel->width.'" />');
					$block['subject'] = t('!title', array('!title' => $carousel->title));
					$block['content'] = theme('carousel_2_block', $carousel);
					return $block;
				}
			}
		}
	}
	return $block;
}
function carousel_2_node_info() {
	return array(
    'carousel_2' => array(
      'name' => t('carousel_2'),
      'module' => 'carousel_2',
      'description' => t("Defines the carousel_2 content type."),
      'has_title' => TRUE,
      'title_label' => t('Carousel 2 Name'),
      'has_body' => FALSE,
	),
	);
}

function carousel_2_form(&$node, $form_state){
	$data = carousel_2_load_data($node);
	$carousel_2_path = drupal_get_path('module', 'carousel_2');
	$carousel_2_machine = 'carousel_2';
	$carousel_2_human = t('Carousel 2');
	drupal_add_js($carousel_2_path . "/js/carousel_2_admin.js");


	$form['title'] = array(
	  '#title' => 'Carousel Title',
  	  '#default_value' => $node->title,
      '#type' => 'textfield',
	  '#description' => t('Carousel Name.'),
	  '#size' => 30,
	  '#required' => TRUE,
      '#maxlength' => 64,
	);


	$image_json = '{'.$data->img.','.$data->img_tn.','.$data->link.','.$data->overlay_text.'}';
	$data_decoded = json_decode($image_json, true);

	$carousel_settings = $data;
	
	$form['carousel_settings'] = array(
	  '#title' => t('Carousel Settings'),
	  '#type' => 'fieldset',
	  '#collapsible' => TRUE, 
      '#collapsed' => FALSE, 
	  '#tree' => TRUE
	);
	$form['carousel_settings']['height'] = array(
	  '#title' => 'Height',
  	  '#default_value' => t($carousel_settings->height != '' ? $carousel_settings->height : '300'),
      '#type' => 'textfield',
	  '#description' => t('Height in pixels'),
	  '#size' => 4,
	);
	$form['carousel_settings']['width'] = array(
	  '#title' => 'Width',
  	  '#default_value' => t($carousel_settings->width != '' ? $data->width : '500'),
      '#type' => 'textfield',
	  '#description' => t('Width in pixels'),
	  '#size' => 4,
	);
	$form['carousel_settings']['display'] = array(
	  '#title' => 'Display Count',
  	  '#default_value' => t($carousel_settings->display != '' ? $data->display : '1'),
      '#type' => 'textfield',
	  '#description' => t('How many pictures do you want visible?'),
	  '#size' => 2,
	);
	$form['carousel_settings']['controls'] = array(
      '#title' => t('Use "Prev and Next" buttons?'),
      '#default_value' => $carousel_settings->controls,
	  '#type' => 'checkbox',
	);
	$form['carousel_settings']['pager'] = array(
      '#title' => t('Use numbered pager buttons?'),
      '#default_value' => $carousel_settings->pager,
	  '#type' => 'checkbox',
	);
	$form['carousel_settings']['overlay'] = array(
      '#title' => t('Use overlay text?'),
      '#default_value' => $carousel_settings->overlay,
	  '#type' => 'checkbox',
	);
	$form['carousel_settings']['overlay_toggle'] = array(
      '#title' => t('Toggle overlay on mouse over?'),
      '#default_value' => $carousel_settings->overlay_toggle,
	  '#type' => 'checkbox',
	);
	$form['carousel_settings']['overlay_height'] = array(
      '#title' => t('Overlay height'),
      '#default_value' => ($carousel_settings->overlay_height != '' ? $data->overlay_height : '150'),
	  '#type' => 'textfield',
	  '#description' => t('Overlay height in pixels.'),
	  '#size' => 4,
	);
	$form['carousel_settings']['overlay_y'] = array(
      '#title' => t('Y position'),
      '#default_value' => ($carousel_settings->overlay_y != '' ? $data->overlay_y : '0'),
      '#type' => 'textfield',
	  '#description' => t('Y position in percent. Values 0-50 equal position top. Values 51-100 equal position bottom.'),
	  '#size' => 4,
	);
	$form['carousel_settings']['interval_time'] = array(
	  '#title' => 'Interval Time',
  	  '#default_value' => t($carousel_settings->interval_time != '' ? $data->interval_time : '4000'),
      '#type' => 'textfield',
	  '#description' => t('Pause time in seconds?'),
	  '#size' => 4,
	);
	$form['carousel_settings']['duration'] = array(
	  '#title' => 'Duration',
  	  '#default_value' => t($carousel_settings->duration != '' ? $data->duration : '1000'),
      '#type' => 'textfield',
	  '#description' => t('Animation time in seconds?'),
	  '#size' => 4,
	);

	//print_r($data_decoded);
	$collapsed = FALSE;
	$required = TRUE;
	for($i=0;$i<=9;$i++){
		if($data_decoded['img'][$i] != ''){
			$collapsed = FALSE;
		}
		if($i >= 2){
			$required = FALSE;
		}
		$form['image'.$i] = array(
	     '#title' => t('Image '.($i+1)),
	  	 '#type' => 'fieldset',
		   '#collapsible' => TRUE, 
         '#collapsed' => $collapsed, 
	  	 '#tree' => TRUE,
		);
		$form['image'.$i]['img'] = array(
		  '#title' => t('Image or video URL'),
	  	  '#default_value' => t($data_decoded['img'][$i]),
		  '#type' => 'textfield',
		  '#description' => t('Path to image or flash video. If there is already a flash video node, type the title to auto-populate the fields.'),
		  '#size' => 30,
		  '#required' => $required,
		  '#maxlength' => 128,
		  '#attributes' => array(
			'class' => 'main-image'
		  ),
		  '#autocomplete_path' => 'carousel_2/autocomplete',
		);
		/*$form['image'.$i]['is_node_ref'] = array(
		  '#title' => t('Image URL'),
	  	  '#default_value' => t($data_decoded['is_node_ref'][$i]),
		  '#type' => 'hidden',
		  '#attributes' => array(
			'class' => 'main-image-ref'
		  ),
		);	*/
		$form['image'.$i]['img_tn'] = array(
		  '#title' => t('Thumbnail Image URL'),
	  	'#default_value' => t($data_decoded['img_tn'][$i]),
		  '#type' => 'textfield',
		  '#description' => t('Path to image thumbnail or flash video place holder.'),
		  '#size' => 30,
	    '#maxlength' => 128,
		'#attributes' => array(
			'class' => 'main-image-tn'
		  ),
		);
		$form['image'.$i]['link'] = array(
		  '#title' => t('Link'),
	  	'#default_value' => t($data_decoded['link'][$i]),
		  '#type' => 'textfield',
		  '#description' => t('A link for the image to link to. Leave blank to open image or video in shadowbox.'),
		  '#size' => 30,
	    '#maxlength' => 128,
		'#attributes' => array(
			'class' => 'main-image-link'
		  ),
		);
		$form['image'.$i]['overlay_text'] = array(
		  '#title' => t('Overlay Text'),
	  	'#default_value' => t($data_decoded['overlay_text'][$i]),
		  '#type' => 'textarea',
		  '#description' => t('Text to appear in image overlay'),
		  '#cols' => 60,
      '#rows' => 5,
		'#attributes' => array(
			'class' => 'main-image-overlay'
		  ),
		);
		
		$collapsed = TRUE;
	}
	
	return $form;
}

function compile_query($carousel){
	$columns = array();
	$sql_statement = '';
	for($i=0;$i<=9;$i++){
		foreach($carousel->{image.$i} as $field_name => $field_value){
			$columns[$field_name] .= '"'.$field_value.'", ';
		}
	}
	foreach($columns as $key=>$val){
		$val = substr($val, 0, -2);
		$sql_statement .= "`".$key."` = '\"".$key."\": [".$val."]', ";
	}
	$sql_statement = substr($sql_statement, 0, -2);
	$title = $carousel->title;
	$id = $carousel->nid;
	$carousel_settings = $carousel->carousel_settings;
	/*print("INSERT INTO `carousel_2`
		SET `name` = '".$title."', ".$sql_statement.", 
			`height` = '".$carousel_settings['height']."',
			`width` = '".$carousel_settings['width']."',
			`display` = '".$carousel_settings['display']."',
			`interval_time` = '".$carousel_settings['interval_time']."',
			`duration` = '".$carousel_settings['duration']."',
			`overlay` = '".$carousel_settings['overlay']."',
			`overlay_toggle` = '".$carousel_settings['overlay_toggle']."',
			`controls` = '".$carousel_settings['controls']."',
			`pager` = '".$carousel_settings['pager']."'
	");*/
	return $sql_statement;
}


function carousel_2_view($node, $teaser = FALSE, $page = FALSE) {
	$sql_statement = compile_query($node);
	$node = node_prepare($node, $teaser);
	$node->content['custom_fields'] = array(
    '#value' => theme('carousel_2', $node),
    '#weight' => 1,
	);
	$title = $node->title;
	$id = $node->nid;
	$carousel_settings = $node->carousel_settings;
	//print_r($carousel_settings);
	return $node;
}

function carousel_2_insert($node) {
	$sql_statement = compile_query($node);
	$title = $node->title;
	$id = $node->nid;
	$carousel_settings = $node->carousel_settings;
	db_query("INSERT INTO {carousel_2}
		SET `nid` = '".$id."',
			`name` = '".$title."', ".$sql_statement.", 
			`height` = '".$carousel_settings['height']."',
			`width` = '".$carousel_settings['width']."',
			`display` = '".$carousel_settings['display']."',
			`interval_time` = '".$carousel_settings['interval_time']."',
			`duration` = '".$carousel_settings['duration']."',
			`overlay` = '".$carousel_settings['overlay']."',
			`overlay_toggle` = '".$carousel_settings['overlay_toggle']."',
			`overlay_height` = '".$carousel_settings['overlay_height']."',
			`overlay_y` = '".$carousel_settings['overlay_y']."',
			`controls` = '".$carousel_settings['controls']."',
			`pager` = '".$carousel_settings['pager']."'
	");
}

function carousel_2_update($node) {
	$sql_statement = compile_query($node);
	$title = $node->title;
	$id = $node->nid;
	$carousel_settings = $node->carousel_settings;
	
	db_query("UPDATE {carousel_2}
		SET `name` = '".$title."', ".$sql_statement.", 
			`height` = '".$carousel_settings['height']."',
			`width` = '".$carousel_settings['width']."',
			`display` = '".$carousel_settings['display']."',
			`interval_time` = '".$carousel_settings['interval_time']."',
			`duration` = '".$carousel_settings['duration']."',
			`overlay` = '".$carousel_settings['overlay']."',
			`overlay_toggle` = '".$carousel_settings['overlay_toggle']."',
			`overlay_height` = '".$carousel_settings['overlay_height']."',
			`overlay_y` = '".$carousel_settings['overlay_y']."',
			`controls` = '".$carousel_settings['controls']."',
			`pager` = '".$carousel_settings['pager']."'
			
				WHERE `nid` = '".$id."'");
}

function carousel_2_delete($node) {
	db_query('DELETE FROM {carousel_2} WHERE nid = %d', $node->nid);
}

function carousel_2_load_data($node) {
	$data = db_fetch_object(db_query("SELECT *
    FROM {carousel_2} WHERE nid = %d", $node->nid));
	return $data;
}

function _carousel_2_autocomplete($string){
  $matches = array();
  $result = db_query_range("SELECT node.nid, node.title, 
  content_type_flash_video.field_flash_video_video_url_value,
  content_type_flash_video.field_flash_video_image_url_value,
  content_type_flash_video.field_flash_video_overlay_text_value 
  	FROM {node, content_type_flash_video}
  		WHERE node.title LIKE '%s%' 
  			AND node.nid = content_type_flash_video.nid", $string, 0, 10);
  while ($item = db_fetch_object($result)) {
    $matches[$item->field_flash_video_video_url_value]['title'] = $item->title;
    $matches[$item->field_flash_video_video_url_value]['cnid'] = $item->nid;
    $matches[$item->field_flash_video_video_url_value]['tn'] = $item->field_flash_video_image_url_value;
    $matches[$item->field_flash_video_video_url_value]['overlay'] = strip_tags($item->field_flash_video_overlay_text_value);
  }
  print drupal_to_js($matches);
}

function carousel_2_block_list() {
	$sql = db_query("SELECT nid FROM {carousel_2} WHERE img != ''");
	$items = array();

	while ($data = db_fetch_object($sql)) {
		$items[] = node_load($data->nid);
	}

	return $items;
}